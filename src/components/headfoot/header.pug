//-
  
  opt.login_as      str
  opt.menu_list     [{text: str, expandable: bool (false), is_active: bool (false), 
                      add_space: bool (false)}, ...]
  opt.login_capt    str
  opt.reg_capt      str

include ../../components/button/button
include ../../components/logo/logo

mixin header(opt)
  -
    var login_as = "", menu_list = [], login_capt, reg_capt
    if(typeof(opt) != "undefined") {
      typeof(opt.login_as) != "undefined" && (login_as = opt.login_as)
      typeof(opt.menu_list) != "undefined" && (menu_list = opt.menu_list)
      typeof(opt.login_capt) != "undefined" && (login_capt = opt.login_capt)
      typeof(opt.reg_capt) != "undefined" && (reg_capt = opt.reg_capt)
    }

  .headers
    .margin
    .main-cntr
      +logo({type: 1})
      .spacer
      each item in menu_list
        if item.expandable
          +_expandable(item.text)
        else
          +_link(item.text, item.is_active)
        if item.add_space
          .link-spacer
      if login_as == ""
        .login-button
          +button({text: login_capt, type: "bordered", content_width: true})
        .reg-button
          +button({text: reg_capt, type: "filled", content_width: true})
      else
        .separator
        .login= login_as
        
    .margin


mixin _link(caption, current = false)
  -
    var url = "#"
  if current
    .link-active= caption
  else
    a.link(href= url)= caption

mixin _expandable(caption)
  -
    var url = "#"
  a.dd-list(href= url)
    .link= caption
    .ico
  
